AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Parameters:
  UserTableName:
    Type: String
  UserEmailMappingIndexName:
    Type: String
  ReviewsTableName:
    Type: String
  ReviewsByVoteIndexName:
    Type: String
  LatestReviewsTableName:
    Type: String
  ReportTableName:
    Type: String
  UserDBArn:
    Type: String
  ReviewsDBArn:
    Type: String
  ReportDBArn:
    Type: String
  LatestReviewsDBArn:
    Type: String
  GmailAddress:
    Type: String
  GamilClientID:
    Type: String
  GmailClientSecret:
    Type: String
  GmailRefreshToken:
    Type: String
  UserSNSTopic:
    Type: String
Resources:
  GraphQL:
    Properties:
      CodeUri: ./graphql
      Handler: graphql.graphqlHandler
      Events:
        HttpGet:
          Properties:
            Method: get
            Path: /graphql
          Type: Api
        HttpOptions:
          Properties:
            Method: options
            Path: /graphql
          Type: Api
        HttpPost:
          Properties:
            Method: post
            Path: /graphql
          Type: Api
      Environment:
        Variables:
          ReviewsTableName: !Ref ReviewsTableName
          ReviewsByVoteIndexName: !Ref ReviewsByVoteIndexName
          LatestReviewsTableName: !Ref LatestReviewsTableName
          UserTableName: !Ref UserTableName
          UserEmailMappingIndexName: !Ref UserEmailMappingIndexName
          ReportTableName: !Ref ReportTableName
          UserSNSTopic: !Ref UserSNSTopic
      Role: !GetAtt GraphQLRole.Arn
      Runtime: nodejs12.x
      Timeout: 20
    Type: AWS::Serverless::Function
  GraphQLRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - arn:aws:logs:*:*:*
              - Action:
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Effect: Allow
                Resource:
                  - !Ref ReviewsDBArn
                  - !Sub ${ReviewsDBArn}/index/${ReviewsByVoteIndexName}
                  - !Ref LatestReviewsDBArn
                  - !Ref UserDBArn
                  - !Sub ${UserDBArn}/index/${UserEmailMappingIndexName}
                  - !Ref ReportDBArn
              - Action:
                  - SNS:Publish
                Effect: Allow
                Resource:
                  - !Ref UserSNSTopic
            Version: "2012-10-17"
          PolicyName: LambdaPolicy
    Type: AWS::IAM::Role
  Emailer:
    Properties:
      CodeUri: ./emailer
      Handler: index.handler
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref UserSNSTopic
      Environment:
        Variables:
          GmailAddress: !Ref GmailAddress
          GamilClientID: !Ref GamilClientID
          GmailClientSecret: !Ref GmailClientSecret
          GmailRefreshToken: !Ref GmailRefreshToken
      Role: !GetAtt EmailerRole.Arn
      Runtime: nodejs12.x
      Timeout: 20
    Type: AWS::Serverless::Function
  EmailerRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: LambdaPolicy
    Type: AWS::IAM::Role
