type Query {
  courses(filter: CourseFilter): [Course]! @rateLimit(window: "1m", max: 100)
}

input CourseFilter {
  requiredCourses: [String]!
  requiredTerm: String
}

type Course {
  courseId: String!
  title: String
  reviewLecturers: [String]
  reviewTerms: [String]
  career: String
  units: String
  grading: String
  components: String
  campus: String
  academic_group: String
  requirements: String
  description: String
  outcome: String
  syllabus: String
  required_readings: String
  recommended_readings: String
  terms: [Term]
  assessments: [AssessementComponent]
  rating: CourseRating
}

type CourseRating {
  numReviews: Int!
  overall: Float!
  grading: Float!
  content: Float!
  difficulty: Float!
  teaching: Float!
}

type Term {
  name: String!
  course_sections: [CourseSection]
}

type CourseSection {
  name: String!
  startTimes: [String]!
  endTimes: [String]!
  days: [String]!
  locations: [String]!
  instructors: [String]!
}

type AssessementComponent {
  name: String!
  percentage: String!
}
