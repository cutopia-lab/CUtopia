type Query {
  me: User! @auth
}

type User {
  username: String!
  email: String!
  verified: Boolean!
  reviewIds: [String]!
  upvotes: Int!
  exp: Int!
  level: Int!
  fullAccess: Boolean!
}

type Mutation {
  createUser(input: CreateUserInput!): Void
  verifyUser(input: VerifyUserInput!): Void
  login(input: LoginInput!): LoginResult!
  sendResetPasswordCode(input: SendResetPasswordCodeIbnput!): Void
  resetPassword(input: ResetPasswordInput!): Void
}

input CreateUserInput {
  username: String!
  SID: String!
  password: String!
}

input VerifyUserInput {
  username: String!
  code: String!
}

input LoginInput {
  username: String!
  password: String!
}

type LoginResult {
  token: String
  me: User
}

input SendResetPasswordCodeIbnput {
  username: String!
}

input ResetPasswordInput {
  username: String!
  newPassword: String!
  resetCode: String!
}
