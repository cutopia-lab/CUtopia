type Mutation {
  createReview(input: CreateReviewInput!): CreateReviewResult @auth
  voteReview(input: VoteReviewInput!): Review @auth
  editReview(input: EditReviewInput!): EditReviewResult @auth(role: OWNER)
}

type Query {
  reviews(input: ReviewsFilter): ReviewsResult! @auth
  review(input: ReviewFilter!): Review @auth
}

type ReviewsResult {
  reviews: [Review]!
  lastEvaluatedKey: LastEvaluatedKey
}

input ReviewsFilter {
  "Either set courseId or getLatest"
  courseId: String
  getLatest: Boolean
  lecturer: String
  ascendingDate: Boolean
  ascendingVote: Boolean
  lastEvaluatedKey: LastEvaluatedKeyInput
}

input ReviewFilter {
  courseId: String!
  createdDate: String!
}

input LastEvaluatedKeyInput {
  courseId: String!
  createdDate: String!
  upvotes: Int
}

type LastEvaluatedKey {
  courseId: String!
  createdDate: String!
  upvotes: Int
}

input CreateReviewInput {
  anonymous: Boolean!
  title: String
  courseId: String!
  term: String!
  section: String!
  lecturer: String!
  overall: Int! @constrain(minValue: 0, maxValue: 4)
  grading: ReviewDetailsInput!
  teaching: ReviewDetailsInput!
  difficulty: ReviewDetailsInput!
  content: ReviewDetailsInput!
}

type CreateReviewResult {
  id: String!
  createdDate: String!
  courseRatings: Ratings!
  groupRatings: Ratings!
}

input EditReviewInput {
  title: String
  courseId: String!
  createdDate: String!
  anonymous: Boolean!
  overall: Int! @constrain(minValue: 0, maxValue: 4)
  grading: ReviewDetailsInput!
  teaching: ReviewDetailsInput!
  difficulty: ReviewDetailsInput!
  content: ReviewDetailsInput!
}

type EditReviewResult {
  modifiedDate: String!
  courseRatings: Ratings!
  groupRatings: Ratings!
}

type Ratings {
  overall: Float!
  grading: Float!
  teaching: Float!
  difficulty: Float!
  content: Float!
  numReviews: Int!
}

input VoteReviewInput {
  courseId: String!
  createdDate: String!
  vote: Int!
}

type Review {
  id: String!
  courseId: String!
  username: String!
  anonymous: Boolean!
  title: String
  createdDate: String!
  modifiedDate: String!
  term: String!
  section: String!
  lecturer: String!
  overall: Int!
  grading: ReviewDetails!
  teaching: ReviewDetails!
  difficulty: ReviewDetails!
  content: ReviewDetails!
  upvotes: Int!
  downvotes: Int!
  myVote: Int
}

type ReviewDetails {
  grade: Int!
  text: String!
}

input ReviewDetailsInput {
  grade: Int! @constrain(minValue: 0, maxValue: 4)
  text: String @constrain(minLen: 10, maxLen: 500)
}
